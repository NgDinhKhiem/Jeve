name: CMake Multi-Platform Build and Release

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: write

jobs:
  build:
    name: Build on ${{ matrix.os }} with ${{ matrix.c_compiler }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: gcc
          - os: macos-latest
            c_compiler: cl

    steps:
      - uses: actions/checkout@v4

      - name: Set Build Output Directory
        run: echo "BUILD_DIR=${{ github.workspace }}/build" >> $GITHUB_ENV

      - name: Configure CMake
        run: |
          cmake -B "${{ env.BUILD_DIR }}" \
                -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
                -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
                -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                -S "${{ github.workspace }}"

      - name: Build
        run: cmake --build "${{ env.BUILD_DIR }}" --config ${{ matrix.build_type }}

      - name: Rename Binary
        shell: bash
        run: |
          mkdir -p "${{ env.BUILD_DIR }}/jeve-${{ matrix.os }}-${{ matrix.c_compiler }}"
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp "${{ env.BUILD_DIR }}/Release/jeve.exe" "${{ env.BUILD_DIR }}/jeve-${{ matrix.os }}-${{ matrix.c_compiler }}/jeve-${{ matrix.os }}-${{ matrix.c_compiler }}.exe"
          else
            cp "${{ env.BUILD_DIR }}/jeve" "${{ env.BUILD_DIR }}/jeve-${{ matrix.os }}-${{ matrix.c_compiler }}/jeve-${{ matrix.os }}-${{ matrix.c_compiler }}"
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jeve-${{ matrix.os }}-${{ matrix.c_compiler }}
          path: |
            ${{ env.BUILD_DIR }}/jeve-${{ matrix.os }}-${{ matrix.c_compiler }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List downloaded files
        run: find dist -type f

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.0
          release_name: "Jeve Multi-Platform Release 1.0.0"
          body: |
            ðŸš€ Jeve interpreter compiled for:
            - âœ… Windows (MSVC)
            - âœ… Linux (GCC, Clang)
            - âœ… macOS (Clang)

            Use the appropriate binary for your system.
          draft: false
          prerelease: false
          files: |
            dist/**/jeve-*
            dist/**/jeve-*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
