name: CMake Multi-Platform Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_DIR: build

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl

    steps:
      - uses: actions/checkout@v4

      - name: Configure CMake
        shell: bash
        run: |
          cmake -B $BUILD_DIR \
            -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
            -DCMAKE_BUILD_TYPE=Release \
            -S .

      - name: Build
        shell: bash
        run: cmake --build $BUILD_DIR --config Release

      - name: Test
        shell: bash
        run: |
          cd $BUILD_DIR
          ctest --build-config Release

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}-${{ matrix.c_compiler }}
          path: ${{ env.BUILD_DIR }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Download Linux Build Artifact (example)
        uses: actions/download-artifact@v4
        with:
          name: build-ubuntu-latest-gcc
          path: build

      # You can add steps to collect other platform artifacts similarly
      - name: Create or Update Tag
        uses: jimeh/update-tags-action@v1
        with:
          tags: |
            v1.0.0
          when_exists: update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.0
          release_name: "Release 1.0.0.0"
          body: "Release of CafeteriaManagerSystem-Backend-1.0-SNAPSHOT"
          draft: false
          prerelease: false
          files: ./all-builds/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
