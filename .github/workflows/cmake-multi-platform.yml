name: CMake Build and Release

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build_type }}

      - name: Rename binary for clarity
        shell: bash
        run: |
          if [ -f build/jeve ]; then
            mv build/jeve build/jeve-${{ matrix.os }}-${{ matrix.c_compiler }}
          fi
          if [ -f build/Release/jeve.exe ]; then
            mv build/Release/jeve.exe build/Release/jeve-${{ matrix.os }}-${{ matrix.c_compiler }}.exe
          fi

      - name: Upload jeve binary
        uses: actions/upload-artifact@v4
        with:
          name: jeve-${{ matrix.os }}-${{ matrix.c_compiler }}
          path: |
            build/jeve-${{ matrix.os }}-${{ matrix.c_compiler }}
            build/Release/jeve-${{ matrix.os }}-${{ matrix.c_compiler }}.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: List downloaded files
        run: ls -R

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.0
          release_name: "Jeve Multi-Platform Release 1.0.0"
          body: |
            ðŸ”§ Compiled for:
            - Windows (MSVC)
            - Linux (GCC, Clang)

            ðŸ§ª Binaries included per OS and compiler.
          draft: false
          prerelease: false
          files: |
            jeve-*/jeve-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
